@model List<ConsultantContractsInternal.Models.ContractAllotment>


@{
	Dictionary<Tuple<String,String>,decimal> totals = ViewBag.Totals;
}
@functions{

    private string ResolveDate(DateTime? dt)
    {
        if (dt.HasValue)
        {
            return dt.Value.ToShortDateString();
        }
        return String.Empty;
    }

    //write money fields
    private string ResolveMoney(Decimal? n)
    {
        if (n.HasValue)
        {
            return n.Value.ToString("C2");
        }
        return "0.00";
    }

    private string ResolvePercent(Decimal? n)
    {
        if (n.HasValue)
        {
            return n.Value.ToString("P", System.Globalization.CultureInfo.InvariantCulture);
        }
        return "0.000";
    }

    private string ResolveNumeral(Decimal? n)
    {
        if (n.HasValue)
        {
            return n.Value.ToString("N", System.Globalization.CultureInfo.InvariantCulture);
        }
        return "0.000";
    }
}


@if (Model.Count > 0)
{
	if (Model.Any(a => a.IsT1()))
	{
		<h4>Title I Allotments</h4>
		<table>
			<thead>
				<tr>
					<th style="text-align:left">Func</th>
					<th style="text-align:left">FAP</th>
					<th style="text-align:left">Funding Priority</th>
					<th style="text-align:left">Fed Percent</th>
					<th style="text-align:left">State Percent</th>
					<th style="text-align:left">State Aid Percent</th>
					<th style="text-align:left">Billed To Date</th>
					<th style="text-align:left">Allotted Amount</th>
				</tr>
			</thead>
			<tbody>
				@{int i = 0;}
				@foreach (var item in Model.Where(a => a.IsT1() && a.AllottedAmt > 0))
				{
					<tr>
						<td>@item.Func</td>
						<td>@item.FAP</td>
                        @if (ViewBag.WriteAccess)
                        {
                        <td>
							<input id="t1Priority_@(i)" class="funding-priority" type="text" value="@item.FundingPriority"/>
							<input id="t1Func_@(i)" type="hidden" class="func" value="@item.Func"/>
							<input id="t1Fap_@(i)" type="hidden" class="fap" value="@item.FAP"/>
							<span class="saved">Saved.</span>
						</td>
						}
                        else
                        { 
                         <td>
                             <span>@(item.FundingPriority)</span>
                         </td>
                        }
						<td>@(@item.FedPct * 100)</td>
						<td>@(@item.StatePct * 100)</td>
						<td>@(@item.StateAidPct * 100)</td>
						<td>@totals[new Tuple<string,string>(item.FAP, item.Func)].ToString("C2")</td>
                        @if (!ViewBag.WriteAccess)
                        {
                        <td>@ResolveMoney(item.AllottedAmt)</td>
                        }
                        else
                        { 
						<td><input id="@string.Format("t1AllotmentAmount_{0}",i)" class="allotmentAmt" type="text" value="@item.AllottedAmt.ToString("C2")"/></td>
						<td><button id="@string.Format("btnUpdateT1Allotment_{0}",i)" class="updtAllotmentAmt">Update</button></td>
                        }
					</tr>
					i++;
				}
			</tbody>
		</table>
	}
	if (Model.Any(a => a.IsT2()))
	{
		<h4>Title II Allotments</h4>
		<table>
			<thead>
				<tr>
					<th style="text-align:left">Func</th>
					<th style="text-align:left">FAP</th>
					<th style="text-align:left">Funding Priority</th>
					<th style="text-align:left">Fed Percent</th>
					<th style="text-align:left">State Percent</th>
					<th style="text-align:left">State Aid Percent</th>
					<th style="text-align:left">Billed To Date</th>
					<th style="text-align:left">Allotted Amount</th>
				</tr>
			</thead>
			<tbody>
				@{int i = 0;}
				@foreach (var item in Model.Where(a => a.IsT2() && a.AllottedAmt > 0))
				{
					<tr id="tr_@(i)">
						<td>@item.Func</td>
						<td>@item.FAP</td>
                        @if (ViewBag.WriteAccess)
                        {
                        <td>
							<input id="t1Priority_@(i)" class="funding-priority" type="text" value="@item.FundingPriority"/>
							<input id="t1Func_@(i)" type="hidden" class="func" value="@item.Func"/>
							<input id="t1Fap_@(i)" type="hidden" class="fap" value="@item.FAP"/>
							<span class="saved">Saved.</span>
						</td>
						}
                        else
                        { 
                         <td>
                             <span>@(item.FundingPriority)</span>
                         </td>
                        }
						<td>@(@item.FedPct * 100)</td>
						<td>@(@item.StatePct * 100)</td>
						<td>@(@item.StateAidPct * 100)</td>
						<td>@totals[new Tuple<string,string>(item.FAP, item.Func)].ToString("C2")</td>
                        @if (!ViewBag.WriteAccess)
                        {
                        <td>@ResolveMoney(item.AllottedAmt)</td>
                        }
                        else
                        { 
						<td><input id="@string.Format("t2AllotmentAmount_{0}",i)" class="allotmentAmt" type="text" value="@item.AllottedAmt.ToString("C2")" /></td>
						<td><button id="@string.Format("btnUpdateT2Allotment_{0}",i)" class="updtAllotmentAmt">Update</button></td>
                        }
					</tr>
					i++;
				}
			</tbody>
		</table>
	}
}
else
{
	<text>None</text>
}