@using System.Web.Optimization
@using System.Web.Services.Description
@{
    ViewBag.Title = "Invoices";
}


<style type="text/css">
    td {
        padding: 0 15px 0 15px;
    }
</style>


@section scripts
{
    <script src="~/Scripts/jquery.tablesorter.js"></script>
    <script src="~/Scripts/jquery.tablesorter.pager.js"></script>

    <script type="text/javascript">


        function formatDate(d) {
            var x = new Date(d);
            x = moment(d);

            return x.format('MMM Do YYYY');
        }

        function IndexContract(data) {
            var self = this;

            self.Permission = data.PermissionId;
            self.InvoiceId = data.InvoiceId;
            self.ContractCode = data.ContractCode;
            self.ConsultantId = data.ConsultantId;
            self.ConsultantName = data.ConsultantName;
            self.JobNo = data.JobNo;
            self.InvoiceNo = data.InvoiceNo;
            self.InvoiceDate = new Date(data.InvoiceDate).toLocaleDateString();
            self.Total = data.Total;
            self.ConsultantInvoiceNo = data.ConsultantInvoiceNo;

            if (data.InvoiceApproval) {
                self.State = function () {
                    var recommend = data.InvoiceApproval.RecommendDate ? true : false;
                    var approved = data.InvoiceApproval.ApprovedDate ? true : false;
                    var sentForPayment = data.InvoiceApproval.BatchPrintDate ? true : false;
                    var paid = data.InvoiceApproval.VoucherDate ? true : false;

                    var s = 'Submitted ' + new Date(data.InvoiceDate).toLocaleDateString();
                    if (recommend)
                        s = 'Recommended ' + new Date(data.InvoiceApproval.RecommendDate).toLocaleDateString();
                    if (approved)
                        s = 'Approved ' + new Date(data.InvoiceApproval.ApprovedDate).toLocaleDateString();
                    if (sentForPayment)
                        s = 'Sent for Payment ' + new Date(data.InvoiceApproval.BatchPrintDate).toLocaleDateString();
                    if (paid)
                        s = 'Paid ' + new Date(data.InvoiceApproval.VoucherDate).toLocaleDateString();

                    return s;
                }();
            } else {
                self.State = 'Submitted ' + new Date(data.InvoiceDate).toLocaleDateString();
            }

            self.contractUrl = ko.computed(function () {
                return '@(Url.Action("Details", "Contracts"))/{0}'.format(self.ContractCode);
            });

            self.consultantUrl = ko.computed(function () {
                return '@(Url.Action("Details", "Consultants"))/{0}'.format(self.ConsultantId);
            });

            self.invoiceUrl = ko.computed(function () {
                return '@(Url.Action("Details"))/{0}'.format(self.InvoiceId);
            });

@*            self.permission = ko.computed(function () {
                return '@(Url.Action("Permission", "Invoices"))/{0}'.format(self.InvoiceId);
            });*@
        }

        function ViewModel() {
            var self = this;
            self.list = ko.mapping.fromJS([]);
            self.getData = function () {
                $.getJSON("@Url.Action("Search")", { term: getParameterByName('term'), state: getParameterByName('state') },
                    function (data, status, jqXHR) {
                        self.list([]);
                        data.forEach(function (d) {
                            self.list.push(new IndexContract(d.data));
                        });
                        pagenation();
                    });
            };
        };

        var vm = new ViewModel();
        ko.applyBindings(vm);
        vm.getData();

        $(function () {
            var q = getParameterByName('term');
            if (q) {
                $('#invoice-search').val(q);
            }
            var state = getParameterByName('state');
            if (state) {
                $('#invoice-state').val(state);
            }
            var reloadPage = function (term, state) {
                window.location = '@Url.Action("Index")?term=' + term + '&state=' + state;
            }
            $('#invoice-search').autocomplete({
                delay: 0,
                source: '@Url.Action("Search")',
                select: function (event, ui) {
                    window.location = '@Url.Action("Details")/' + ui.item.data.InvoiceId;
                }
            }).keypress(function (e) {
                if (e.which === 13)
                    reloadPage(this.value, $('#invoice-state').val());
            });

            $('#invoice-state').change(function (e) {
                reloadPage($('#invoice-search').val(), $('#invoice-state').val());
            });

            pagenation();
            $("#RowCount").change(function () {
                pagenation();
            });

            $("a.paginate").click(function (e) {
                var myTable = "#InvoiceList";
                var myTableBody = myTable + " tbody";
                var myTableRows = myTableBody + " tr";
                var myTableColumn = myTable + " th";

                e.preventDefault();
                var tableRows = $(myTableRows);
                var tmpRec = parseInt($(myTableBody).attr("data-firstRecord"), $("#RowCount").val() - 10);
                var pageSize = parseInt($("#RowCount").val());

                if ($(this).attr("id") == "next") {
                    tmpRec += pageSize;
                } else {
                    tmpRec -= pageSize;
                }
                if (tmpRec < 0 || tmpRec > tableRows.length) return
                $(myTableBody).attr("data-firstRecord", tmpRec);
                var start = parseInt($(myTableBody).attr("data-firstRecord"));
                var end = parseInt($("#RowCount").val())
                var tableRows = $(myTableRows);
                var end = start + end;
                tableRows.hide();
                tableRows.slice(start, end).show();

                $(".paginate").show();
                // If the first row is visible hide prev
                if (tableRows.eq(0).is(":visible")) $('#previous').hide();
                // If the last row is visible hide next 
                if (tableRows.eq(tableRows.length - 1).is(":visible")) $('#next').hide();
            });
        });

            function pagenation() {
                var myTable = "#InvoiceList";
                var myTableBody = myTable + " tbody";
                var myTableRows = myTableBody + " tr";
                var myTableColumn = myTable + " th";

                function initTable() {
                    $(myTableBody).attr("data-pageSize", $("#RowCount").val() - 10);
                    $(myTableBody).attr("data-firstRecord", 0);
                    $('#previous').hide();
                    $('#next').show();
                    Rowchange(parseInt($(myTableBody).attr("data-firstRecord")),
                             parseInt($("#RowCount").val()));
                }
                var Rowchange = function (start, size) {
                    var tableRows = $(myTableRows);
                    var end = start + size;
                    tableRows.hide();
                    tableRows.slice(start, end).show();
                    $(".paginate").show();
                    // If the first row is visible hide prev
                    if (tableRows.eq(0).is(":visible")) $('#previous').hide();
                    // If the last row is visible hide next 
                    if (tableRows.eq(tableRows.length - 1).is(":visible")) $('#next').hide();
                }
                initTable();
            }
    </script>
}
@{
    List<int> rowcountlist = new List<int>();
    rowcountlist.Add(10);
    rowcountlist.Add(20);
    rowcountlist.Add(40);
    rowcountlist.Add(50);        
}

<h2>Invoice Index</h2>
<div style="padding:2px;">   
   Consultant <input id="invoice-search" type="text" class="searchBar" />
    <select id="invoice-state">
        <option value="0">All</option>
        <option value="1">Submitted</option>
        <option value="2">Recommended</option>
        <option value="3">Approved</option>
        <option value="4">Paid</option>
    </select>
    @if(ViewBag.WriteAccess)
    {
        @Html.ActionLink("New Simple Invoice", "AddSimpleInvoice")
    }
</div>

<div class="datagrid">
    <table id="InvoiceList">
        <thead>
            <tr>
                <th style="text-align:center">Contract </th>
                <th style="text-align:center">Invoice No</th>
                <th style="text-align:center">Invoice Date</th>
                <th style="text-align:left">Amount</th>
                <th style="text-align:left">Submitted By</th>
                <th style="text-align:left">Status</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: list">
            <tr>
                <td><a data-bind="    attr: { href: contractUrl }, text: JobNo"></a>-<span data-bind="    text: ContractCode"></span></td>
                <td style="text-align: center"><a data-bind="attr: { href: invoiceUrl }, text: InvoiceNo"></a></td>
                <td style="text-align: center" data-bind="text: InvoiceDate"></td>
                <td style="text-align: left" data-bind="text: Total"></td>
                <td style="text-align: left"><a data-bind="attr: { href: consultantUrl }, text: ConsultantName"></a></td>
                <td style="text-align: left" data-bind="text: State"></td>
            </tr>
        </tbody>
    </table>
</div>

<div style="padding: 4px 10px 4px 40px">
    Row Count: @Html.DropDownList("RowCount", new SelectList(rowcountlist))&nbsp;   
        <a href="#" class="paginate" id="previous">Previous</a>&nbsp;
        <a href="#" class="paginate" id="next">Next</a>
</div>

