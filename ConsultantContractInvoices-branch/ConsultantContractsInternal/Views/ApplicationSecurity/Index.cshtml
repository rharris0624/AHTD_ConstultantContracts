@model ConsultantContractsInternal.ViewModels.UserRoleVm

@{
    ViewBag.Title = "Index";
}

@section scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript">
        var applicationLoaded = false;
        var currentUserId = "";

        $(
            (
                function () {
                    $("#Create").enabled = false;
                }
            )()
        )

        var submitError = function (jqXHR, textStatus, errorThrown) {
            //alert('bad things happened');
            //alert("Submit Error");
            $('#roleData').html(jqXHR.responseText);
            //alert(jqXHR.responseText);
        };

        var submitSuccess = function (data, textStatus, jqXHR) {
            if (data.Status === 'OK') {
                        window.location.href = '@Url.Action("Index", "Home")';
                    } else if (data.Status === "ERROR") {
                        throw new Error("Submit Error");
                    }
                }

        var roleViewModel = function () {
            var someVariable = "Hello";
        };
    //    var roleVm = new roleViewModel();
@*        $(
            $("#UserId").change(function (jsReturnArgs) {
                var userId = $("#UserId option:selected").val();
                if (userId != '0') {
                    var href = '@(@Url.Action("Create","ApplicationSecurity"))?userId={0}'.format(userId);
                    $("#Create").prop("href", href);
                }
                displayAssignedRoles(userId);
            })
        )*@
        var displayAssignedRoles = function (userId) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("IndexDetails")',
                    data: { id: userId },
                    success: function (jsReturnArgs) {
                        if (jsReturnArgs.Status === 300) { //300 is an arbitrary value I just made up right now
                            showPopup("You do not have access to that");
                        }
                        $('#roleData').html(jsReturnArgs.ViewString);
                    },
                    error: submitError
                });
        };

        $(document).ready(function () {
            if ($('#UserId').val() != "") {
                displayAssignedRoles($('#UserId').val());
            }
        });

        $(function () {
            function log(message) {
                $("<div>").text(message).prependTo("#log");
            }
            $('#UserId').autocomplete({
                delay: 0,
                source: '@Url.Action("GetUserList","User")',
                minLength: 2,
                select: function (event, ui) {
                    if (ui.item.data.UserId != '0') {
                        var href = '@(@Url.Action("Create","ApplicationSecurity"))?userId={0}'.format(ui.item.data.UserId);
                        $("#Create").prop("href", href);
                    }
                    displayAssignedRoles(ui.item.data.UserId);
                }
            }).keypress(function (e) {
                if (e.which === 13)
                    window.location = '@Url.Action("Index")?q=' + this.value;
            });
        });
    </script>
}
<h2>Index</h2>
<fieldset>
    <legend class="display-title">User Roles</legend>
    <br />
    @Html.ActionLink("Create New", "Create", null, new { id = "Create" })
    @*<div class="editor-label">
        @Html.LabelFor(model => model.UserId)
    </div>*@
    <div hidden="hidden">
        @Html.HiddenFor(model => model.UserId,new {id = "currentUserId"})
    </div>
    <div class="editor-field">
        @*@Html.DropDownListFor(x => x.UserId, new SelectList(Model.UserList, "ID", "Name"),"Select a user")
        @Html.ValidationMessageFor(model => model.ApplicationSecurities)*@
        <label for="users">User: </label>
        <input id="UserId" type="text" class="searchBar" />
    </div>
    <br />
    @*<div class="ui-widget" style="margin-top:2em; font-family:Arial">
      Result:
      <div id="log" style="height: 200px; width: 300px; overflow: auto;" class="ui-widget-content"></div>
    </div>*@
    <br />
    <div class="datagrid" id="roleData">
    </div>
</fieldset>
